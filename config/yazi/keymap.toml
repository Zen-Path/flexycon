# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [
    # Key order:
    # - regular (mandatory)
    # - shift (mandatory)
    # - control
    # - alt
    # - function (mandatory if available)
    # - multi-keys (e.g. ["r", "i"]). These are ordered logically, or alphabetically.

    # { on = "a", run = "shell 'notify-send \"$(date)\"'", desc = "Test keybind" },

    # = 'Esc' to 'Backspace' =

    { on = "<Esc>", run = "escape", desc = "Exit visual mode, clear selected, or cancel search" },
    { on = "~",     run = "help", desc = "Open help" },
    { on = "`",     run = "noop", desc = "" },

    { on = "1",     run = "tab_switch 0", desc = "Switch to tab 1" },
    { on = "!",     run = 'shell --confirm "$SHELL" --block', desc =  "Open shell here" },
    { on = "<F1>",  run = "help", desc = "Open help" },

    { on = "2",     run = "tab_switch 1", desc = "Switch to tab 2" },
    { on = "@",     run = "noop", desc = "" },
    { on = "<F2>",  run = "noop", desc = "" },

    { on = "3",     run = "tab_switch 2", desc = "Switch to tab 3" },
    { on = "#",     run = "noop", desc = "" },
    { on = "<F3>",  run = "noop", desc = "" },

    { on = "4",     run = "tab_switch 3", desc = "Switch to tab 4" },
    { on = "$",     run = "noop", desc = "" },
    { on = "<F4>",  run = "noop", desc = "" },

    { on = "5",     run = "tab_switch 4", desc = "Switch to tab 5" },
    { on = "%",     run = "noop", desc = "" },
    { on = "<F5>",  run = "noop", desc = "" },

    { on = "6",     run = "tab_switch 5", desc = "Switch to tab 6" },
    { on = "^",     run = "noop", desc = "" },
    { on = "<F6>",  run = "noop", desc = "" },

    { on = "7",     run = "tab_switch 6", desc = "Switch to tab 7" },
    { on = "&",     run = "noop", desc = "" },
    { on = "<F7>",  run = "noop", desc = "" },

    { on = "8",     run = "tab_switch 7", desc = "Switch to tab 8" },
    { on = "*",     run = "noop", desc = "" },
    { on = "<F8>",  run = "noop", desc = "" },

    { on = "9",     run = "tab_switch 8", desc = "Switch to tab 9" },
    { on = "(",     run = "noop", desc = "" },
    { on = "<F9>",  run = "noop", desc = "" },

    { on = "0",     run = "noop", desc = "" },
    { on = ")",     run = "noop", desc = "" },
    { on = "<F10>", run = "noop", desc = "" },

	{ on = "-",     run = "link",               desc = "Symlink the absolute path of yanked files" },
    { on = "_",     run = "link --relative",    desc = "Symlink the relative path of yanked files" },
    { on = "<C-->", run = "hardlink",           desc = "Hardlink yanked files" },
    { on = "<F11>", run = "noop",               desc = "" },

    { on = "=",     run = "noop", desc = "" },
    { on = "+",     run = "noop", desc = "" },
    { on = "<F12>", run = "noop", desc = "" },

    { on = "<Backspace>", run = "noop", desc = "" },

    # = 'Tab' to '/' =

	{ on = "<Tab>", run = "spot", desc = "Spot hovered file" },
    { on = "<Backtab>", run = "noop", desc = "" },

    { on = "q",     run = "quit",               desc = "Quit the process" },
    { on = "Q",     run = "quit --no-cwd-file", desc = "Quit the process without outputting cwd-file" },

    { on = "w",     run = "tasks_show", desc = "Show task manager" },
    { on = "W",     run = "noop", desc = "" },

    { on = "e",     run = "noop", desc = "" },
    { on = "E",     run = "noop", desc = "" },

    # { on = "r",     run = "noop", desc = "" },
    # TODO: handle systems that don't use vidir. Use basic rename --bulk
    { on = "R",     run = "shell 'vidir -- $(basename -a -- \"$0\")' --block", desc = "Rename the hovered file using vidir" },
    # TODO: notify user if selection spans directories.
    # TODO: if no file is selected, rename the current directory's contents
    { on = ["r", "b"], run = "shell 'vidir -- $(basename -a -- \"$@\")' --block", desc = "Rename - bulk from current dir" },
    { on = ["r", "B"], run = "shell 'vidir -- \"$@\"' --block", desc = "Rename - bulk all selected" },

    ## Place cursor
    { on = ["r", "i"], run = "rename --hovered --cursor=start",      desc = "Rename - [i]nsert at the start" },
    { on = ["r", "a"], run = "rename --hovered --cursor=end",        desc = "Rename - [a]ppend to the end" },
    { on = ["r", "x"], run = "rename --hovered --cursor=before_ext", desc = "Rename - put cursor before e[x]tension" },

    ## Replace parts
    { on = ["r", "r"], run = "rename --hovered --cursor=start --empty=stem", desc = "Rename - replace [r]oot" },
    { on = ["r", "e"], run = "rename --hovered --cursor=end --empty=ext",    desc = "Rename - replace [e]xtension" },
    { on = ["r", "a"], run = "rename --hovered --empty=all",                 desc = "Rename - replace [a]ll" },

    { on = "t",     run = "tab_create --current", desc = "Create a new tab with CWD" },
    { on = "T",     run = "plugin max-preview", desc = "Maximize or restore preview" },
    { on = "<C-t>",     run = "plugin custom-search", desc = "Maximize or restore preview" },

    { on = "y",     run = "yank",   desc = "Yank selected files (copy)" },
    { on = "Y",     run = "unyank", desc = "Cancel the yank status" },

    { on = "u",     run = "shell 'trash-restore' --block", desc = "Restore files" },
    { on = "U",     run = "noop", desc = "" },
    { on = "<C-u>", run = "arrow -50%", desc = "Move cursor up half page" },

    # { on = "i",     run = "noop", desc = "" },
    { on = "I",     run = "noop", desc = "" },
    { on = "<C-i>", run = "toggle_all --state=none", desc = "[I]nvert selection of all files" },

    { on = "o",     run = "open",               desc = "Open selected files" },
    { on = "O",     run = "open --interactive", desc = "Open selected files interactively" },
    { on = "<C-o>", run = "open --hovered --interactive", desc = "Open hovered file" },

    { on = "p",     run = "paste",          desc = "Paste yanked files" },
    { on = "P",     run = "paste --force",  desc = "Paste yanked files (overwrite if the destination exists)" },

    { on = "[",     run = "tab_switch -1 --relative",   desc = "Switch to the previous tab" },
    { on = "{",     run = "tab_swap -1",                desc = "Swap current tab with previous tab" },

    { on = "}",     run = "tab_swap 1",                 desc = "Swap current tab with next tab" },
    { on = "]",     run = "tab_switch 1 --relative",    desc = "Switch to the next tab" },

    { on = "\\",    run = "noop", desc = "" },
    { on = "|",     run = "noop", desc = "" },

    # = 'a' to 'Enter'

    { on = "a",     run = "create", desc = "Create a file (for directories, append a '/')" },
    { on = "A",     run = "create --dir", desc = "Create a directory" },
    { on = "<C-a>", run = "toggle_all --state=on", desc = "Select all files" },

    { on = "s",     run = "search --via=fd", desc = "Search files by name via fd" },
    { on = "S",     run = "search --via=rg", desc = "Search files by content via ripgrep" },
    { on = "<C-s>", run = "escape --search", desc = "Cancel the ongoing search" },

    # { on = "d",     run = "noop", desc = "" },
    { on = "D",     run = "remove --force", desc = "Trash selected files (force)" },
    { on = "<C-d>", run = "arrow 50%", desc = "Move cursor down half page" },

    { on = ["d", "t"], run = "remove",               desc = "Trash selected files" },
    { on = ["d", "h"], run = "remove --hovered",     desc = "Trash hovered file" },
    { on = ["d", "d"], run = "remove --permanently", desc = "Delete selected files" },
    { on = ["d", "H"], run = "remove --permanently --hovered", desc = "Delete hovered file" },

    { on = "f",     run = "filter --smart", desc = "Filter files" },
    { on = "F",     run = "plugin fzf", desc = "Jump to a file/directory via fzf" },
    { on = "<C-f>", run = "arrow 100%", desc = "Move cursor down one page" },

	{ on = "G",     run = "arrow 99999999",     desc = "Move cursor to the bottom" },

	{ on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },
    { on = ["g", "r"], run = '''
shell 'ya emit cd "$(git rev-parse --show-toplevel)"'
''', desc = "Go to the root of the current Git repository" },
	{ on = ["g", "<Space>"], run = "cd --interactive", desc = "Jump interactively" },

	{ on = ["g", "h"], run = "cd ~", desc = "Go home" },

	# Goto XDG dirs
	{ on = ["g", "d"], run = "shell 'ya emit cd \"$XDG_DOCUMENTS_DIR\"'",   desc = "Goto XDG_DOCUMENTS_DIR" },
	{ on = ["g", "D"], run = "shell 'ya emit cd \"$XDG_DOWNLOAD_DIR\"'",    desc = "Goto XDG_DOWNLOAD_DIR" },
	{ on = ["g", "i"], run = "shell 'ya emit cd \"$XDG_PICTURES_DIR\"'",    desc = "Goto XDG_PICTURES_DIR" },
	{ on = ["g", "m"], run = "shell 'ya emit cd \"$XDG_MUSIC_DIR\"'",       desc = "Goto XDG_MUSIC_DIR" },
	{ on = ["g", "v"], run = "shell 'ya emit cd \"$XDG_VIDEOS_DIR\"'",      desc = "Goto XDG_VIDEOS_DIR" },

    # Goto custom directories
	{ on = ["g", "a"], run = "cd ~/Archive",       desc = "Goto ~/Archive" },
	{ on = ["g", "e"], run = "cd ~/Entertainment", desc = "Goto ~/Entertainment" },
	{ on = ["g", "E"], run = "cd ~/Exercise",      desc = "Goto ~/Exercise" },
	{ on = ["g", "p"], run = "cd ~/Personal",      desc = "Goto ~/Personal" },
	{ on = ["g", "P"], run = "cd ~/Projects",      desc = "Goto ~/Projects" },
	{ on = ["g", "n"], run = "cd ~/Nerdy",         desc = "Goto ~/Nerdy" },
	{ on = ["g", "L"], run = "cd ~/.local",        desc = "Goto ~/.local" },
	{ on = ["g", "l", "s"], run = "cd ~/.local/share", desc = "Goto ~/.local/share" },

    # University
	{ on = ["g", "U"], run = "cd ~/University", desc = "Goto ~/University" },
   	{ on = ["g", "u", "s"], run = ["reveal ~/University/No_Backup/schedule.pdf", "open"], desc = "Open university schedule" },
   	{ on = ["g", "u", "S"], run = "cd ~/University/No_Backup/Semester", desc = "Goto university schedule" },

    # Goto config
	{ on = ["g", "C"],      run = "cd ~/.config",           desc = "Goto config home" },
	{ on = ["g", "c", "y"], run = "cd ~/.config/yazi",      desc = "Goto yazi config" },
	{ on = ["g", "c", "e"], run = "cd ~/.config/nvim",      desc = "Goto editor config" },
	{ on = ["g", "c", "w"], run = "cd ~/.mozilla/firefox",  desc = "Goto web browser config" },

    # Goto source
	{ on = ["g", "f"],      run = "cd ~/.local/src/flexycon",   desc = "Goto flexycon source" },
	{ on = ["g", "S"],      run = "cd ~/.local/src",            desc = "Goto source home"},
	{ on = ["g", "s", "d"], run = "cd ~/.local/src/dwm",        desc = "Goto dwm source" },
	{ on = ["g", "s", "D"], run = "cd ~/.local/src/dwm-status", desc = "Goto dwm-status source" },
	{ on = ["g", "s", "l"], run = "cd ~/.local/src/labs",       desc = "Goto labs source" },
	{ on = ["g", "s", "w"], run = "cd ~/.local/src/wis",        desc = "Goto wis source" },

    # Open files
   	{ on = ["g", "c", "f"], run = ["reveal ~/.config/newsraft/feeds", "open"], desc = "Open newsraft feeds" },

	{ on = "h",     run = "leave",      desc = "Go back to the parent directory" },
	{ on = "H",     run = "back",       desc = "Go back to the previous directory. Useful when combined with bookmarks" },

	{ on = "j",     run = "arrow 1",    desc = "Move cursor down" },
	{ on = "J",     run = "seek 5",     desc = "Seek down 5 units in the preview" },
	{ on = "<C-j>", run = "plugin parent-arrow --args=1",   desc = "Navigate down in parent dir without leaving CWD" },

	{ on = "k",     run = "arrow -1",   desc = "Move cursor up" },
	{ on = "K",     run = "seek -5",    desc = "Seek up 5 units in the preview" },
	{ on = "<C-k>", run = "plugin parent-arrow --args=-1",  desc = "Navigate up in parent dir without leaving CWD" },

	{ on = "l",     run = "enter",      desc = "Enter the child directory" },
	{ on = "L",     run = "forward",    desc = "Go forward to the next directory. Useful when combined with bookmarks" },

    { on = ";",     run = "shell --interactive",            desc = "Run a shell command" },
	{ on = ":",     run = "shell --block --interactive",    desc = "Run a shell command (block)" },

    { on = "'",     run = "search_do --via=fd", desc = "Display a flatten view of  directory" },
    { on = "\"",    run = "search_do --via=fd --args='--type file'", desc = "Display a flatten view of the files from a directory" },

    { on = "<Enter>",   run = "open",           desc = "Open selected files" },
    { on = "<S-Enter>", run = "noop",           desc = "" },
    # There's an issue with 'Shift+Enter' for some reason
	{ on = "<C-Enter>", run = "open --hovered --interactive", desc = "Open selected files interactively" },

    # = 'z' to '?'

	{ on = "z",     run = "plugin zoxide", desc = "Jump to a directory via zoxide" },
    { on = "Z",     run = "noop", desc = "" },
	{ on = "<C-z>", run = "suspend", desc = "Suspend the process" },

	{ on = "x",     run = "yank --cut", desc = "Yank selected files (cut)" },
	{ on = "X",     run = "unyank",     desc = "Cancel the yank status" },

    # { on = "c",     run = "noop", desc = "" },
    # { on = "C",     run = "noop", desc = "" },
	{ on = "<C-c>", run = "close", desc = "Close the current tab, or quit if it's last" },
	# Copy
	{ on = [ "c", "c" ], run = "copy path",             desc = "Copy the file path" },
	{ on = [ "c", "f" ], run = "copy filename",         desc = "Copy the filename" },
	{ on = [ "c", "n" ], run = "copy name_without_ext", desc = "Copy the filename without extension" },
	{ on = [ "c", "d" ], run = "copy dirname",          desc = "Copy the directory path" },

	# Visual mode
	{ on = "v",     run = "visual_mode",         desc = "Enter visual mode (selection mode)" },
	{ on = "V",     run = "visual_mode --unset", desc = "Enter visual mode (unset mode)" },

    { on = "b",     run = "noop", desc = "" },
    { on = "B",     run = "noop", desc = "" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },

	# Find
	{ on = "n",     run = "find_arrow",             desc = "Goto the next found" },
	{ on = "N",     run = "find_arrow --previous",  desc = "Goto the previous found" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Linemode: size" },
	{ on = [ "m", "p" ], run = "linemode permissions", desc = "Linemode: permissions" },
	{ on = [ "m", "b" ], run = "linemode btime",       desc = "Linemode: btime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Linemode: mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Linemode: owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Linemode: none" },

    { on = "<",     run = "noop", desc = "" },
    # Sorting
	{ on = [ ",", "a" ], run = "sort alphabetical --reverse=no",                desc = "Sort alphabetically" },
	{ on = [ ",", "A" ], run = "sort alphabetical --reverse",                   desc = "Sort alphabetically (reverse)" },

	{ on = [ ",", "n" ], run = "sort natural --reverse=no",                     desc = "Sort naturally" },
	{ on = [ ",", "N" ], run = "sort natural --reverse",                        desc = "Sort naturally (reverse)" },

	{ on = [ ",", "s" ], run = [ "sort size --reverse=no", "linemode size" ],   desc = "Sort by size" },
	{ on = [ ",", "S" ], run = [ "sort size --reverse", "linemode size" ],      desc = "Sort by size (reverse)" },

	{ on = [ ",", "e" ], run = "sort extension --reverse=no",                   desc = "Sort by extension" },
	{ on = [ ",", "E" ], run = "sort extension --reverse",                      desc = "Sort by extension (reverse)" },

	{ on = [ ",", "m" ], run = [ "sort mtime --reverse=no", "linemode mtime" ], desc = "Sort by modified time" },
	{ on = [ ",", "M" ], run = [ "sort mtime --reverse", "linemode mtime" ],    desc = "Sort by modified time (reverse)" },

	{ on = [ ",", "b" ], run = [ "sort btime --reverse=no", "linemode btime" ], desc = "Sort by birth time" },
	{ on = [ ",", "B" ], run = [ "sort btime --reverse", "linemode btime" ],    desc = "Sort by birth time (reverse)" },

	{ on = [ ",", "r" ], run = "sort random --reverse=no",                      desc = "Sort randomly" },

	{ on = ".",     run = "hidden toggle", desc = "Toggle the visibility of hidden files" },
    { on = ">",     run = "noop", desc = "" },

	{ on = "/",     run = "find --smart",               desc = "Find next file" },
	{ on = "?",     run = "find --previous --smart",    desc = "Find previous file" },

    # = Special keys =

	{ on = "<Space>",   run = [ "toggle --state=none", "arrow 1" ],     desc = "Toggle the current selection state" },
	{ on = "<S-Space>", run = [ "toggle --state=none", "arrow -1" ],    desc = "Toggle the current selection state" },

    { on = "<Delete>",      run = "noop", desc = "" },
    { on = "<S-Delete>",    run = "noop", desc = "" },

    { on = "<Insert>",      run = "noop", desc = "" },
    { on = "<S-Insert>",    run = "noop", desc = "" },

	{ on = "<PageUp>",      run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<S-PageUp>",    run = "arrow -50%",  desc = "Move cursor up half page" },

	{ on = "<PageDown>",    run = "arrow 100%",  desc = "Move cursor down one page" },
	{ on = "<S-PageDown>",  run = "arrow 50%",   desc = "Move cursor down half page" },

	# Arrow keys
	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Left>",  run = "leave",    desc = "Go back to the parent directory" },
	{ on = "<Right>", run = "enter",    desc = "Enter the child directory" },
]

[tasks]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close task manager" },
	{ on = "<C-[>", run = "close", desc = "Close task manager" },
	{ on = "<C-c>", run = "close", desc = "Close task manager" },
	{ on = "w",     run = "close", desc = "Close task manager" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Enter>", run = "inspect", desc = "Inspect the task" },
	{ on = "x",       run = "cancel",  desc = "Cancel the task" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[spot]

keymap = [
	{ on = "<Esc>", run = "close", desc = "Close the spot" },
	{ on = "<C-[>", run = "close", desc = "Close the spot" },
	{ on = "<C-c>", run = "close", desc = "Close the spot" },
	{ on = "<Tab>", run = "close", desc = "Close the spot" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "h", run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "l", run = "swipe 1",  desc = "Swipe to the previous file" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },
	{ on = "<Left>",  run = "swipe -1", desc = "Swipe to the next file" },
	{ on = "<Right>", run = "swipe 1",  desc = "Swipe to the previous file" },

	# Copy
	{ on = [ "c", "c" ], run = "copy cell", desc = "Copy selected cell" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[pick]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel pick" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel pick" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the pick" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[input]

keymap = [
	{ on = "<C-c>",   run = "close",          desc = "Cancel input" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit input" },
	{ on = "<Esc>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },
	{ on = "<C-[>",   run = "escape",         desc = "Go back the normal mode, or cancel input" },

	# Mode
	{ on = "i", run = "insert",                              desc = "Enter insert mode" },
	{ on = "a", run = "insert --append",                     desc = "Enter append mode" },
	{ on = "I", run = [ "move -999", "insert" ],             desc = "Move to the BOL, and enter insert mode" },
	{ on = "A", run = [ "move 999", "insert --append" ],     desc = "Move to the EOL, and enter append mode" },
	{ on = "v", run = "visual",                              desc = "Enter visual mode" },
	{ on = "V", run = [ "move -999", "visual", "move 999" ], desc = "Enter visual mode and select all" },

	# Character-wise movement
	{ on = "h",       run = "move -1", desc = "Move back a character" },
	{ on = "l",       run = "move 1",  desc = "Move forward a character" },
	{ on = "<Left>",  run = "move -1", desc = "Move back a character" },
	{ on = "<Right>", run = "move 1",  desc = "Move forward a character" },
	{ on = "<C-b>",   run = "move -1", desc = "Move back a character" },
	{ on = "<C-f>",   run = "move 1",  desc = "Move forward a character" },

	# Word-wise movement
	{ on = "b",     run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "w",     run = "forward",               desc = "Move forward to the start of the next word" },
	{ on = "e",     run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },
	{ on = "<A-b>", run = "backward",              desc = "Move back to the start of the current or previous word" },
	{ on = "<A-f>", run = "forward --end-of-word", desc = "Move forward to the end of the current or next word" },

	# Line-wise movement
	{ on = "0",      run = "move -999", desc = "Move to the BOL" },
	{ on = "$",      run = "move 999",  desc = "Move to the EOL" },
	{ on = "<C-a>",  run = "move -999", desc = "Move to the BOL" },
	{ on = "<C-e>",  run = "move 999",  desc = "Move to the EOL" },
	{ on = "<Home>", run = "move -999", desc = "Move to the BOL" },
	{ on = "<End>",  run = "move 999",  desc = "Move to the EOL" },

	# Delete
	{ on = "<Backspace>", run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<Delete>",    run = "backspace --under", desc = "Delete the character under the cursor" },
	{ on = "<C-h>",       run = "backspace",         desc = "Delete the character before the cursor" },
	{ on = "<C-d>",       run = "backspace --under", desc = "Delete the character under the cursor" },

	# Kill
	{ on = "<C-u>", run = "kill bol",      desc = "Kill backwards to the BOL" },
	{ on = "<C-k>", run = "kill eol",      desc = "Kill forwards to the EOL" },
	{ on = "<C-w>", run = "kill backward", desc = "Kill backwards to the start of the current word" },
	{ on = "<A-d>", run = "kill forward",  desc = "Kill forwards to the end of the current word" },

	# Cut/Yank/Paste
	{ on = "d", run = "delete --cut",                              desc = "Cut the selected characters" },
	{ on = "D", run = [ "delete --cut", "move 999" ],              desc = "Cut until the EOL" },
	{ on = "c", run = "delete --cut --insert",                     desc = "Cut the selected characters, and enter insert mode" },
	{ on = "C", run = [ "delete --cut --insert", "move 999" ],     desc = "Cut until the EOL, and enter insert mode" },
	{ on = "x", run = [ "delete --cut", "move 1 --in-operating" ], desc = "Cut the current character" },
	{ on = "y", run = "yank",                                      desc = "Copy the selected characters" },
	{ on = "p", run = "paste",                                     desc = "Paste the copied characters after the cursor" },
	{ on = "P", run = "paste --before",                            desc = "Paste the copied characters before the cursor" },

	# Undo/Redo
	{ on = "u",     run = "undo", desc = "Undo the last operation" },
	{ on = "<C-r>", run = "redo", desc = "Redo the last operation" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[confirm]

keymap = [
	{ on = "<Esc>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-[>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<C-c>",   run = "close",          desc = "Cancel the confirm" },
	{ on = "<Enter>", run = "close --submit", desc = "Submit the confirm" },

	{ on = "n", run = "close",          desc = "Cancel the confirm" },
	{ on = "y", run = "close --submit", desc = "Submit the confirm" },

	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[completion]

keymap = [
	{ on = "<C-c>",   run = "close",                                      desc = "Cancel completion" },
	{ on = "<Tab>",   run = "close --submit",                             desc = "Submit the completion" },
	{ on = "<Enter>", run = [ "close --submit", "close_input --submit" ], desc = "Submit the completion and input" },

	{ on = "<A-k>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<A-j>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",   run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-p>", run = "arrow -1", desc = "Move cursor up" },
	{ on = "<C-n>", run = "arrow 1",  desc = "Move cursor down" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },
]

[help]

keymap = [
	{ on = "<Esc>", run = "escape", desc = "Clear the filter, or hide the help" },
	{ on = "<C-c>", run = "close",  desc = "Hide the help" },

	# Navigation
	{ on = "G", run = "arrow 99999999", desc = "Move cursor to the bottom" },
	{ on = ["g", "g"], run = "arrow -99999999", desc = "Move cursor to the top" },

	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },

	# Filtering
	{ on = "f", run = "filter", desc = "Filter for the help items" },
]
