# Dunst Docs: https://dunst-project.org/documentation/

[global]
    # Display notifications on a specific monitor.
	# Default: 0
    #
    # Can be either the name or the number of a monitor.
    # Use `xrandr --listmonitors`.
    #
    # Ignored if `follow` is set to "keyboard" or "mouse".
	monitor = 0

    # Display notifications on the focused monitor.
    # Values:
    #   [none]      don't follow anything
    #   mouse       follow mouse pointer
    #   keyboard    follow window with keyboard focus
    #
    # "keyboard" needs a window manager that exports the _NET_ACTIVE_WINDOW property.
    #
    # Ignore `monitor` if value is set to "keyboard" or "mouse".
	# TODO: Check behavior of dwm - does if follow mouse or keyboard
    follow = keyboard

    # Use POSIX regex for filtering rules.
    # Values:
    #   true        use POSIX regex
    #   [false]     use `fnmatch` for matching strings
    #
    # https://en.m.wikibooks.org/wiki/Regular_Expressions/POSIX-Extended_Regular_Expressions.
	enable_posix_regex = true

    # The width of the notification window in pixels.
    # Format:
    #   x               constant width
    #   (x_min, x_max)  expand from min to max as necessary
    #
    # If `width` > screen width, clamp to screen width.
    # To have dynamic full-screen notifications, set value to a high number (e.g 10000)
    width = 350

    # Max height of a single notification.
    height = 500

    # The number of notifications that can appear at one time.
    # Default: 20
    #
    # When this limit is reached, additional notifications will be queued and displayed
    # when the currently displayed ones either time out or are manually dismissed.
    #
    # If `indicate_hidden` is true, then limit is reduced by 1, and last notification is
    # the hidden count.
    #
    # Value '0' means no limit.
    notification_limit = 5

    # The origin of the notification window on the screen.
    # Values:
    #   top-left
    #   top-center
    #   [top-right]
    #   bottom-left
    #   bottom-center
    #   bottom-right
    #   left-center
    #   center
    #   right-center
    #
    #  It can then be moved with `offset`.
    origin = "bottom-right"

    # Offset in pixels from the corner of the screen specified by `origin`
    # Format: horizontalxvertical
    #
    # A negative value will lead to the notification being off screen.
    offset = 20x20

    # Specifies a scale factor for dimensions to adapt notifications to HiDPI screens on X11.
    # Default: 0
    #
    # Try to use a whole number scaling factor.
    #
    # Value '0' means the scale factor is auto-detected.
    scale = 0

    # Draw a progress bar at the bottom of the notification
    # Values:
    #   [true]
    #   false
    #
    # Only applies when an integer value is passed to dunst as a hint, like
    # `notify-send "Downloading File" "Progress" -h "int:value:100"`
    progress_bar = true

    # Horizontal alignment of the progress bar.
    # Values:
    #   left
    #   [center]
    #   right
    #
    # The progress bar will always keep a distance of `horizontal_padding` from the edge
    # of the notification.
    progress_bar_horizontal_alignment = center

    # The height of the progress bar in pixel.
    # Default: 10
    #
    # This includes the frame. Make sure this value is bigger than twice the frame width.
    progress_bar_height = 12

    # The minimum width of the progress bar in pixels.
    # Default: 150
    #
    # If `progress_bar_min_width` > `width`, will throw a warning.
    progress_bar_min_width = 100

    # The maximum width of the progress bar in pixels.
    # Default: 300
    #
    # If `progress_bar_max_width` > `width`, will clamp to `width`.
    progress_bar_max_width = 1000

    # The frame width of the progress bar in pixels.
    # Default: 1
    #
    # Value should be smaller than half of `progress_bar_height`.
    progress_bar_frame_width = 1

    # The corner radius of the progress bar in pixels.
    # Default: 0
    #
    # Value '0' means disabled.
    progress_bar_corner_radius = 5

    # The corner radius of the icon image in pixels.
    # Default: 0
    #
    # Value '0' means disabled.
    icon_corner_radius = 5

    # Display currently hidden notification count.
    # Values:
    #   [true]
    #   false
    #
    # If value is true, then limit is reduced by 1, and last notification is
    # the hidden count.
    indicate_hidden = true

    # Notification transparency scale
    # Values:
    #   0       fully opaque
    #   100     fully invisible
    #
    # On Wayland, set the transparency part of a color.
    # Requires a running compositor.
    transparency = 10

    # The height in pixels of the separator between notifications.
    separator_height = 0

    padding = 8

    horizontal_padding = 8

    text_icon_padding = 0

    frame_width = 3

    gap_size = 8

    separator_color = frame

    sort = urgency_descending

    idle_threshold = 0

    layer = overlay

    force_xwayland = false

    font = Monospace 12

    line_height = 1

    format = "<b>%s</b>\n%b"

    vertical_alignment = center

    show_age_threshold = 60

    ignore_newline = false

    stack_duplicates = true

    hide_duplicate_count = false

    show_indicators = true

    icon_path = "/usr/share/icons/Papirus"

    icon_theme = "Papirus"

    enable_recursive_icon_lookup = true

    sticky_history = true

    history_length = 10000

    dmenu = "/usr/local/bin/dmenu -p dunst"

    browser = "/usr/bin/xdg-open"

    always_run_script = false

    title = "Dunst"

    class = "Dunst"

    force_xinerama = false

    corner_radius = 10

    mouse_left_click = do_action, close_current
    mouse_middle_click = close_all
    mouse_right_click = close_current

    ignore_dbusclose = true

    override_pause_level = 0

# [telegram]
#     appname = telegram
#     action_name = "$XDG_CONFIG_HOME/dunst/scripts/telegram-open.sh"

[urgency_low]
    # IMPORTANT: colors have to be defined in quotation marks.
    # Otherwise the "#" and following would be interpreted as a comment.
    # background = "#222222"
    # foreground = "#888888"
    # timeout = 10
	background = "#1d2021"
    foreground = "#928374"
    timeout = 5
    # Icon for notifications with low urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_normal]
    # background = "#285577"
    # foreground = "#ffffff"
    # timeout = 10
	foreground = "#ebdbb2"
    background = "#458588"
    timeout = 7
    # Icon for notifications with normal urgency, uncomment to enable
    #icon = /path/to/icon

[urgency_critical]
    # background = "#900000"
    # foreground = "#ffffff"
    # frame_color = "#ff0000"
    # timeout = 0
    background = "#1cc24d"
    foreground = "#ebdbb2"
    frame_color = "#fabd2f"
    timeout = 10
    # Icon for notifications with critical urgency, uncomment to enable
    #icon = /path/to/icon

# Fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
[fullscreen_delay_everything]
   fullscreen = delay

[fullscreen_show_critical]
    msg_urgency = critical
    fullscreen = show
